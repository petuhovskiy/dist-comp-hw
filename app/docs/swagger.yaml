basePath: /
definitions:
  modelapi.Product:
    properties:
      category:
        description: Word category of the product
        type: string
      code:
        description: Code of the product
        type: string
      id:
        description: Number ID of the product
        type: integer
      name:
        description: Name of the product
        type: string
    type: object
  modelapi.ProductList:
    properties:
      count:
        description: Total count of products
        type: integer
      list:
        description: Products on selected page
        items:
          $ref: '#/definitions/modelapi.Product'
        type: array
    type: object
  modelapi.ProductReq:
    properties:
      category:
        description: Word category of the product
        type: string
      code:
        description: Code of the product
        type: string
      name:
        description: Name of the product
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: petuhovskiy@yandex.ru
    name: Arthur Petukhovsky
    url: https://t.me/petuhovskiy
  description: This is sample internet shop, made as dist-comp homework.
  license: {}
  title: Internet Shop API
  version: "1.0"
paths:
  /v1/product:
    post:
      consumes:
      - application/json
      parameters:
      - description: Product to create
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/modelapi.ProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelapi.Product'
      security:
      - ApiKeyAuth: []
      summary: Create product
      tags:
      - products
  /v1/product/{id}:
    delete:
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200": {}
      security:
      - ApiKeyAuth: []
      summary: Delete product
      tags:
      - products
    get:
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelapi.Product'
      security:
      - ApiKeyAuth: []
      summary: Get product by id
      tags:
      - products
    put:
      consumes:
      - application/json
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product to put
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/modelapi.ProductReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelapi.Product'
      security:
      - ApiKeyAuth: []
      summary: Edit product
      tags:
      - products
  /v1/product/list:
    get:
      description: All products sorted in the order of decreasing id.
      parameters:
      - description: Page offset
        in: query
        name: offset
        type: integer
      - description: Page limit
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelapi.ProductList'
      security:
      - ApiKeyAuth: []
      summary: Show a list of products (plus for pagination)
      tags:
      - products
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"

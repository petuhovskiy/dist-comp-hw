package routers

import (
	"fmt"
	"log"
	"net/http"

	"github.com/go-chi/chi"
	"github.com/go-chi/chi/middleware"
	"github.com/go-chi/render"

	"github.com/petuhovskiy/dist-comp-hw/handlers"

	httpSwagger "github.com/swaggo/http-swagger"

	_ "github.com/petuhovskiy/dist-comp-hw/docs" // docs is generated by Swag CLI, you have to import it.
)

func CreateRouter(productsV1 *handlers.Products) chi.Router {
	r := chi.NewMux()

	r.Use(middleware.RequestID)
	r.Use(middleware.Logger)
	r.Use(middleware.Recoverer)
	r.Use(render.SetContentType(render.ContentTypeJSON))

	r.Route("/v1", func(r chi.Router) {
		r.Route("/product", func(r chi.Router) {
			r.Post("/", productsV1.Create)
			r.Get("/list", productsV1.List)

			r.Route("/{productID}", func(r chi.Router) {
				r.Use(productsV1.ParseProductID)
				r.Get("/", productsV1.Get)
				r.Put("/", productsV1.Update)
				r.Delete("/", productsV1.Delete)
			})
		})
	})

	log.Println("Attached swagger ui at /swagger")

	r.Get("/swagger", func(w http.ResponseWriter, r *http.Request) {
		http.Redirect(w, r, "/swagger/", http.StatusMovedPermanently)
	})

	r.Get("/swagger/*", httpSwagger.Handler(
		httpSwagger.URL("/swagger/doc.json"), //The url pointing to API definition"
	))

	r.Get("/", func(w http.ResponseWriter, r *http.Request) {
		fmt.Fprintf(w, `<a href="/swagger">Swagger UI</a>`)
	})

	return r
}

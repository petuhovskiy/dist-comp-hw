basePath: /
definitions:
  modelapi.IssuedTokens:
    properties:
      access_token:
        type: string
      access_token_ttl:
        type: string
      refresh_token:
        type: string
      refresh_token_ttl:
        type: string
    type: object
  modelapi.RefreshRequest:
    properties:
      refresh_token:
        type: string
    type: object
  modelapi.SigninRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  modelapi.SignupRequest:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  modelapi.SignupResponse:
    properties:
      email:
        type: string
      user_id:
        type: integer
    type: object
  modelapi.ValidateRequest:
    properties:
      access_token:
        type: string
    type: object
  modelapi.ValidateResponse:
    properties:
      expire_after:
        type: string
      user_id:
        type: integer
    type: object
host: localhost:8081
info:
  contact:
    email: petuhovskiy@yandex.ru
    name: Arthur Petukhovsky
    url: https://t.me/petuhovskiy
  description: This is sample auth server, made as dist-comp homework.
  license: {}
  title: Auth API
  version: "1.0"
paths:
  /v1/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: Refresh token
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/modelapi.RefreshRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelapi.IssuedTokens'
      summary: Accepts valid refresh token, returns new refresh and access tokens.
      tags:
      - auth
  /v1/signin:
    post:
      consumes:
      - application/json
      parameters:
      - description: Credentials
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/modelapi.SigninRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelapi.IssuedTokens'
      summary: Sign in (login)
      tags:
      - auth
  /v1/signup:
    post:
      consumes:
      - application/json
      parameters:
      - description: Credentials
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/modelapi.SignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelapi.SignupResponse'
      summary: Sign up (register)
      tags:
      - auth
  /v1/validate:
    post:
      consumes:
      - application/json
      parameters:
      - description: Access token
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/modelapi.ValidateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modelapi.ValidateResponse'
      summary: Validates access token.
      tags:
      - auth
swagger: "2.0"

version: "3.7"
services:
  db:
    image: postgres
    environment:
      POSTGRES_PASSWORD: DB_PASSWORD
    volumes:
      - "data-app:/var/lib/postgresql/data"
    restart: unless-stopped

  app:
    build:
      context: ./
      dockerfile: ./Dockerfile-std
      args:
        MOD_NAME: "app"
    ports:
      - 8080:8080
    environment:
      BIND_ADDR: ":8080"
      POSTGRES_ADDR: "host=db port=5432 user=postgres password=DB_PASSWORD dbname=postgres sslmode=disable"
      AUTH_ADDR: "http://auth:8081"
    depends_on:
      - db
      - auth
      - rabbit
    restart: unless-stopped

  authdb:
    image: postgres
    environment:
      POSTGRES_PASSWORD: DB_PASSWORD_SECURE
    volumes:
      - "data-auth:/var/lib/postgresql/data"
    restart: unless-stopped

  auth:
    build:
      context: ./
      dockerfile: ./Dockerfile-std
      args:
        MOD_NAME: "auth"
    ports:
      - 8081:8081
    environment:
      BIND_ADDR: ":8081"
      POSTGRES_ADDR: "host=authdb port=5432 user=postgres password=DB_PASSWORD_SECURE dbname=postgres sslmode=disable"
      ACCESS_TOKEN_EXPR: "10m"
      REFRESH_TOKEN_EXPR: "60m"
      TOKEN_LENGTH: "32"
      JWT_SECRET: "my_awesome_secret"
    depends_on:
      - authdb
    restart: unless-stopped

  sms:
    build:
      context: ./
      dockerfile: ./Dockerfile-std
      args:
        MOD_NAME: "sms"
    environment:
      SMS_HOST: "https://sms.ru"
      SMS_API_ID: ${SMS_API_ID}
      AMQP_URL: "amqp://guest:guest@rabbit:5672/"
      QUEUE_NAME: "notifications.sms"
    depends_on:
      - rabbit

  email:
    build:
      context: ./
      dockerfile: ./Dockerfile-std
      args:
        MOD_NAME: "email"
    environment:
      AMQP_URL: "amqp://guest:guest@rabbit:5672/"
      QUEUE_NAME: "notifications.email"
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USERNAME: ${SMTP_USERNAME}
      SMTP_PASSWORD: ${SMTP_PASSWORD}
      EMAIL_FROM: ${EMAIL_FROM}
    depends_on:
      - rabbit

  product-import:
    build:
      context: ./
      dockerfile: ./Dockerfile-std
      args:
        MOD_NAME: "product-import"
    ports:
      - 8082:8082
    environment:
      BIND_ADDR: ":8082"
    depends_on:
      - rabbit
    restart: unless-stopped

  rabbit:
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - "data-rabbit:/var/lib/rabbitmq"
    restart: unless-stopped

volumes:
  data-app:
  data-auth:
  data-rabbit:
